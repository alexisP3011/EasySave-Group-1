<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButton" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="ConfirmationLaunchMessageMultiple" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir lancer les {0} travaux sélectionnés ?</value>
  </data>
  <data name="ConfirmationLaunchMessageOne" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir lancer le travail sélectionné ?</value>
  </data>
  <data name="ConfirmationLaunchMessageTitle" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="ConfirmationPopUp" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir effectuer cette action ?</value>
  </data>
  <data name="ConfirmationStopMultipleWorks" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir arrêter les {0} travaux sélectionnés ?</value>
  </data>
  <data name="ConfirmationPauseMultipleWorks" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir mettre en pause les {0} travaux sélectionnés ?</value>
  </data>
  <data name="ConfirmationStopWork" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir arrêter le travail sélectionné ?</value>
  </data>
  <data name="ConfirmationPauseWork" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir mettre en pause le travail sélectionné ?</value>
  </data>
  <data name="ConfirmButton" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="CreateButton" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="CreatePopUp" xml:space="preserve">
    <value>Créer un travail
de sauvegarde</value>
  </data>
  <data name="CreatePopUpTitle" xml:space="preserve">
    <value>Créer un travail</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="DeletionConfirmationMessageMultiple" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer les {0} travaux sélectionnés ?</value>
  </data>
  <data name="DeletionConfirmationMessageOne" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer le travail {0} ?</value>
  </data>
  <data name="DeletionConfirmationMessageTitle" xml:space="preserve">
    <value>Confirmation de suppression</value>
  </data>
  <data name="ErrorDeletionMessage" xml:space="preserve">
    <value>Aucun travail n'est sélectionné pour être supprimé.</value>
  </data>
  <data name="ErrorMessageTextBlockName" xml:space="preserve">
    <value>Veuillez saisir un nom pour le travail.</value>
  </data>
  <data name="ErrorMessageTextBlockSource" xml:space="preserve">
    <value>Veuillez sélectionner un dossier source.</value>
  </data>
  <data name="ErrorMessageTextBlockTarget" xml:space="preserve">
    <value>Veuillez sélectionner un dossier cible.</value>
  </data>
  <data name="ErrorMultipleSelectUpdateMessage" xml:space="preserve">
    <value>Veuillez sélectionner un seul travail à mettre à jour.</value>
  </data>
  <data name="ErrorNoSelectUpdateMessage" xml:space="preserve">
    <value>Veuillez sélectionner un travail à mettre à jour.</value>
  </data>
  <data name="ErrorPauseAnyWork" xml:space="preserve">
    <value>Erreur : Zéro travail à mettre en pause.</value>
  </data>
  <data name="ErrorPauseZeroWork" xml:space="preserve">
    <value>Erreur : Zéro travail à mettre en pause.</value>
  </data>
  <data name="ErrorRequiredFieldsUpdate" xml:space="preserve">
    <value>Tous les champs sont obligatoires.</value>
  </data>
  <data name="ErrorSelectLaunchMessage" xml:space="preserve">
    <value>Veuillez sélectionner un travail à lancer.</value>
  </data>
  <data name="ErrorSofwareLaunchMessage" xml:space="preserve">
    <value>Veuillez fermer le logiciel métier pour continuer.</value>
  </data>
  <data name="ErrorStopAnyWork" xml:space="preserve">
    <value>Erreur : Aucun travail sélectionné.</value>
  </data>
  <data name="ErrorStopZeroWork" xml:space="preserve">
    <value>Erreur : Pas de travail à arrêter.</value>
  </data>
  <data name="ExtensionLabel" xml:space="preserve">
    <value>Extension à crypter :</value>
  </data>
  <data name="FileSizeTransfert" xml:space="preserve">
    <value>Taille maximale des fichiers
pendant le transfert :</value>
  </data>
  <data name="InformationMessageTitle" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="KeyLabel" xml:space="preserve">
    <value>Clef de cryptage :</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Langage :</value>
  </data>
  <data name="LaunchButton" xml:space="preserve">
    <value>Lancer</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>Liste des Travaux</value>
  </data>
  <data name="LogExtensionLabel" xml:space="preserve">
    <value>Extension de fichier log : </value>
  </data>
  <data name="MiddlewareLabel" xml:space="preserve">
    <value>Logiciel métier :</value>
  </data>
  <data name="MultipleDeletionConfiramtionMessageAll" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer les {0} travaux sélectionnés ?</value>
  </data>
  <data name="MultipleDeletionConfirmationMessageOne" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer le travail sélectionné ?</value>
  </data>
  <data name="MultipleDeletionConfirmationMessageTitle" xml:space="preserve">
    <value>Confirmation des suppressions multiples</value>
  </data>
  <data name="NameLabel" xml:space="preserve">
    <value>Nom :</value>
  </data>
  <data name="PauseButton" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PriorityExtension" xml:space="preserve">
    <value>Gestion prioritaire des fichiers :</value>
  </data>
  <data name="SettingsPopUp" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="SourceLabel" xml:space="preserve">
    <value>Source :</value>
  </data>
  <data name="StateLabel" xml:space="preserve">
    <value>État : </value>
  </data>
  <data name="StopButton" xml:space="preserve">
    <value>Arrêter</value>
  </data>
  <data name="SuccessMessageCreate" xml:space="preserve">
    <value>Le travail {0} a été créé avec succès.</value>
  </data>
  <data name="SuccessMessageTitle" xml:space="preserve">
    <value>Succès</value>
  </data>
  <data name="SuccessMessageUpdate" xml:space="preserve">
    <value>Le travail {0} a été mis à jour avec succès.</value>
  </data>
  <data name="TargetLabel" xml:space="preserve">
    <value>Cible :</value>
  </data>
  <data name="TypeLabel" xml:space="preserve">
    <value>Type du travail :</value>
  </data>
  <data name="UpdateButton" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="UpdatePopUpTitle" xml:space="preserve">
    <value>Modification de travail</value>
  </data>
  <data name="UpdateWorkPopUp" xml:space="preserve">
    <value>Modifier un travail
de sauvegarde</value>
  </data>
  <data name="WorkStateActive" xml:space="preserve">
    <value>Actif</value>
  </data>
  <data name="WorkStateFinished" xml:space="preserve">
    <value>Terminé</value>
  </data>
  <data name="WorkStateInactive" xml:space="preserve">
    <value>inactif</value>
  </data>
  <data name="WorkTypeContent" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="ErrorCryptoSoft" xml:space="preserve">
    <value>La clé de chiffrement est requise lorsqu'une extension cible est spécifiée dans les paramètres.</value>
  </data>
  <data name="RestartApp" xml:space="preserve">
    <value>Redémarrer l'application pour que les modifications prennent effet.</value>
  </data>
</root>