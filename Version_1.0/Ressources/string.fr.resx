<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Bienvenue dans l'application !</value>
  </data>
  <data name="MenuChoices" xml:space="preserve">
    <value>1. Creer un travail de sauvegarde
2. Afficher tous les travaux de sauvegarde
3. Supprimer un travail de sauvegarde
4. Mettre a jour un travail de sauvegarde
5. Lancer un travail de sauvegarde
6. Changer la langue de l'application
7. Quitter</value>
  </data>
  <data name="SelectOption" xml:space="preserve">
    <value>Veuillez selectionner une option :</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>etes-vous sur de vouloir realiser cette action ? (y/n)</value>
  </data>
  <data name="InputError" xml:space="preserve">
    <value>Entree invalide. Veuillez reessayer.</value>
  </data>
  <data name="NoBackupAvailable" xml:space="preserve">
    <value>Aucun travail de sauvegarde disponible.</value>
  </data>
  <data name="Works" xml:space="preserve">
    <value>---Travail {0}---
Nom : {1}
Source : {2}
Cible : {3}
Type : {4}
Etat : {5}</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>Voici la liste des travaux de sauvegarde :</value>
  </data>
  <data name="Work" xml:space="preserve">
    <value>Voici les details du travail :
Nom : {0}
Source :{1}
Cible : {2}
Type : {3}
Etat : {4}</value>
  </data>
  <data name="CurrentWork" xml:space="preserve">
    <value>Details du travail en cours :
Nom : {0}
Source :{1}
Cible : {2}
Type : {3}
Etat : {4}</value>
  </data>
  <data name="AskWorkName" xml:space="preserve">
    <value>Veuillez entrer le nom du travail :</value>
  </data>
  <data name="LeaveMessage" xml:space="preserve">
    <value>Merci d'avoir utilise notre application. Au revoir !</value>
  </data>
  <data name="NoWorkAvailable" xml:space="preserve">
    <value>Aucun travail disponible avec ce nom.</value>
  </data>
  <data name="CreateWorkMessage" xml:space="preserve">
    <value>Travail cree avec succes !</value>
  </data>
  <data name="DeleteWorkMessage" xml:space="preserve">
    <value>Travail supprime avec succes !</value>
  </data>
  <data name="UpdateWorkMessage" xml:space="preserve">
    <value>Travail mis a jour avec succes !</value>
  </data>
  <data name="ContinueMessage" xml:space="preserve">
    <value>Appuyez sur une touche pour continuer...</value>
  </data>
  <data name="MaxBackupMessage" xml:space="preserve">
    <value>Vous avez atteint le nombre maximum de travaux de sauvegarde (5). Veuillez en supprimer un avant d'en creer un nouveau.</value>
  </data>
  <data name="LaunchMessage" xml:space="preserve">
    <value>Lancement du travail de sauvegarde...</value>
  </data>
  <data name="InvalidOption" xml:space="preserve">
    <value>Option invalide. Veuillez reessayer.</value>
  </data>
  <data name="UpdateChoices" xml:space="preserve">
    <value>1. Nom du travail de sauvegarde
2. Repertoire source
3. Repertoire cible
4. Type
5. Quitter</value>
  </data>
  <data name="AlreadyInProgress" xml:space="preserve">
    <value>Un travail de sauvegarde est deja en cours.</value>
  </data>
  <data name="AlreadyInUse" xml:space="preserve">
    <value>La langue selectionnee est deja en cours d'usage.</value>
  </data>
  <data name="AskUpdate" xml:space="preserve">
    <value>Veuillez selectionner l'option que vous souhaitez mettre a jour :</value>
  </data>
  <data name="LanguageChoices" xml:space="preserve">
    <value>Notre application est disponible dans ces deux langues :
1. Anglais
2. Francais</value>
  </data>
  <data name="ChangeLanguageMessage" xml:space="preserve">
    <value>La langue a ete changee avec succes.</value>
  </data>
  <data name="AskSaveName" xml:space="preserve">
    <value>Veuillez entrer le nom du travail de sauvegarde :</value>
  </data>
  <data name="AskSource" xml:space="preserve">
    <value>Veuillez entrer votre source :</value>
  </data>
  <data name="AskTarget" xml:space="preserve">
    <value>Veuillez entrer votre cible :</value>
  </data>
  <data name="AskType" xml:space="preserve">
    <value>Veuillez entrer le type du travail de sauvegarde : </value>
  </data>
  <data name="EnterChoice" xml:space="preserve">
    <value>Entrez votre choix : </value>
  </data>
</root>